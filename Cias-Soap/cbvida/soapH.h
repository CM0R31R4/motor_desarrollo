/* soapH.h
   Generated by gSOAP 2.8.14 from cruzblanca.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin(soap), soap_serialize_byte(soap, data), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin(soap), soap_serialize_int(soap, data), soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE__ns1__ConciliacionResponse_ConciliacionResult
#define SOAP_TYPE__ns1__ConciliacionResponse_ConciliacionResult (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ConciliacionResponse_ConciliacionResult(struct soap*, const char*, int, const _ns1__ConciliacionResponse_ConciliacionResult *, const char*);
SOAP_FMAC3 _ns1__ConciliacionResponse_ConciliacionResult * SOAP_FMAC4 soap_in__ns1__ConciliacionResponse_ConciliacionResult(struct soap*, const char*, _ns1__ConciliacionResponse_ConciliacionResult *, const char*);

#ifndef soap_write__ns1__ConciliacionResponse_ConciliacionResult
#define soap_write__ns1__ConciliacionResponse_ConciliacionResult(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ConciliacionResponse-ConciliacionResult", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__ConciliacionResponse_ConciliacionResult * SOAP_FMAC4 soap_get__ns1__ConciliacionResponse_ConciliacionResult(struct soap*, _ns1__ConciliacionResponse_ConciliacionResult *, const char*, const char*);

#ifndef soap_read__ns1__ConciliacionResponse_ConciliacionResult
#define soap_read__ns1__ConciliacionResponse_ConciliacionResult(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__ConciliacionResponse_ConciliacionResult(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__ConciliacionResponse_ConciliacionResult * SOAP_FMAC2 soap_instantiate__ns1__ConciliacionResponse_ConciliacionResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ConciliacionResponse_ConciliacionResult * soap_new__ns1__ConciliacionResponse_ConciliacionResult(struct soap *soap, int n = -1) { return soap_instantiate__ns1__ConciliacionResponse_ConciliacionResult(soap, n, NULL, NULL, NULL); }

inline _ns1__ConciliacionResponse_ConciliacionResult * soap_new_req__ns1__ConciliacionResponse_ConciliacionResult(struct soap *soap) { _ns1__ConciliacionResponse_ConciliacionResult *_p = soap_instantiate__ns1__ConciliacionResponse_ConciliacionResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__ConciliacionResponse_ConciliacionResult * soap_new_set__ns1__ConciliacionResponse_ConciliacionResult(struct soap *soap, char *__any, char *__mixed) { _ns1__ConciliacionResponse_ConciliacionResult *_p = soap_instantiate__ns1__ConciliacionResponse_ConciliacionResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__ConciliacionResponse_ConciliacionResult::__any = __any; _p->_ns1__ConciliacionResponse_ConciliacionResult::__mixed = __mixed; } return _p; }

inline void soap_delete__ns1__ConciliacionResponse_ConciliacionResult(struct soap *soap, _ns1__ConciliacionResponse_ConciliacionResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__ConciliacionResponse_ConciliacionResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__AnulacionResponse_AnulacionResult
#define SOAP_TYPE__ns1__AnulacionResponse_AnulacionResult (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AnulacionResponse_AnulacionResult(struct soap*, const char*, int, const _ns1__AnulacionResponse_AnulacionResult *, const char*);
SOAP_FMAC3 _ns1__AnulacionResponse_AnulacionResult * SOAP_FMAC4 soap_in__ns1__AnulacionResponse_AnulacionResult(struct soap*, const char*, _ns1__AnulacionResponse_AnulacionResult *, const char*);

#ifndef soap_write__ns1__AnulacionResponse_AnulacionResult
#define soap_write__ns1__AnulacionResponse_AnulacionResult(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:AnulacionResponse-AnulacionResult", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__AnulacionResponse_AnulacionResult * SOAP_FMAC4 soap_get__ns1__AnulacionResponse_AnulacionResult(struct soap*, _ns1__AnulacionResponse_AnulacionResult *, const char*, const char*);

#ifndef soap_read__ns1__AnulacionResponse_AnulacionResult
#define soap_read__ns1__AnulacionResponse_AnulacionResult(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__AnulacionResponse_AnulacionResult(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__AnulacionResponse_AnulacionResult * SOAP_FMAC2 soap_instantiate__ns1__AnulacionResponse_AnulacionResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AnulacionResponse_AnulacionResult * soap_new__ns1__AnulacionResponse_AnulacionResult(struct soap *soap, int n = -1) { return soap_instantiate__ns1__AnulacionResponse_AnulacionResult(soap, n, NULL, NULL, NULL); }

inline _ns1__AnulacionResponse_AnulacionResult * soap_new_req__ns1__AnulacionResponse_AnulacionResult(struct soap *soap) { _ns1__AnulacionResponse_AnulacionResult *_p = soap_instantiate__ns1__AnulacionResponse_AnulacionResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__AnulacionResponse_AnulacionResult * soap_new_set__ns1__AnulacionResponse_AnulacionResult(struct soap *soap, char *__any, char *__mixed) { _ns1__AnulacionResponse_AnulacionResult *_p = soap_instantiate__ns1__AnulacionResponse_AnulacionResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AnulacionResponse_AnulacionResult::__any = __any; _p->_ns1__AnulacionResponse_AnulacionResult::__mixed = __mixed; } return _p; }

inline void soap_delete__ns1__AnulacionResponse_AnulacionResult(struct soap *soap, _ns1__AnulacionResponse_AnulacionResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AnulacionResponse_AnulacionResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__ConfirmacionResponse_ConfirmacionResult
#define SOAP_TYPE__ns1__ConfirmacionResponse_ConfirmacionResult (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ConfirmacionResponse_ConfirmacionResult(struct soap*, const char*, int, const _ns1__ConfirmacionResponse_ConfirmacionResult *, const char*);
SOAP_FMAC3 _ns1__ConfirmacionResponse_ConfirmacionResult * SOAP_FMAC4 soap_in__ns1__ConfirmacionResponse_ConfirmacionResult(struct soap*, const char*, _ns1__ConfirmacionResponse_ConfirmacionResult *, const char*);

#ifndef soap_write__ns1__ConfirmacionResponse_ConfirmacionResult
#define soap_write__ns1__ConfirmacionResponse_ConfirmacionResult(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ConfirmacionResponse-ConfirmacionResult", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__ConfirmacionResponse_ConfirmacionResult * SOAP_FMAC4 soap_get__ns1__ConfirmacionResponse_ConfirmacionResult(struct soap*, _ns1__ConfirmacionResponse_ConfirmacionResult *, const char*, const char*);

#ifndef soap_read__ns1__ConfirmacionResponse_ConfirmacionResult
#define soap_read__ns1__ConfirmacionResponse_ConfirmacionResult(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__ConfirmacionResponse_ConfirmacionResult(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__ConfirmacionResponse_ConfirmacionResult * SOAP_FMAC2 soap_instantiate__ns1__ConfirmacionResponse_ConfirmacionResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ConfirmacionResponse_ConfirmacionResult * soap_new__ns1__ConfirmacionResponse_ConfirmacionResult(struct soap *soap, int n = -1) { return soap_instantiate__ns1__ConfirmacionResponse_ConfirmacionResult(soap, n, NULL, NULL, NULL); }

inline _ns1__ConfirmacionResponse_ConfirmacionResult * soap_new_req__ns1__ConfirmacionResponse_ConfirmacionResult(struct soap *soap) { _ns1__ConfirmacionResponse_ConfirmacionResult *_p = soap_instantiate__ns1__ConfirmacionResponse_ConfirmacionResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__ConfirmacionResponse_ConfirmacionResult * soap_new_set__ns1__ConfirmacionResponse_ConfirmacionResult(struct soap *soap, char *__any, char *__mixed) { _ns1__ConfirmacionResponse_ConfirmacionResult *_p = soap_instantiate__ns1__ConfirmacionResponse_ConfirmacionResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__ConfirmacionResponse_ConfirmacionResult::__any = __any; _p->_ns1__ConfirmacionResponse_ConfirmacionResult::__mixed = __mixed; } return _p; }

inline void soap_delete__ns1__ConfirmacionResponse_ConfirmacionResult(struct soap *soap, _ns1__ConfirmacionResponse_ConfirmacionResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__ConfirmacionResponse_ConfirmacionResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CertificacionResponse_CertificacionResult
#define SOAP_TYPE__ns1__CertificacionResponse_CertificacionResult (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CertificacionResponse_CertificacionResult(struct soap*, const char*, int, const _ns1__CertificacionResponse_CertificacionResult *, const char*);
SOAP_FMAC3 _ns1__CertificacionResponse_CertificacionResult * SOAP_FMAC4 soap_in__ns1__CertificacionResponse_CertificacionResult(struct soap*, const char*, _ns1__CertificacionResponse_CertificacionResult *, const char*);

#ifndef soap_write__ns1__CertificacionResponse_CertificacionResult
#define soap_write__ns1__CertificacionResponse_CertificacionResult(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:CertificacionResponse-CertificacionResult", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__CertificacionResponse_CertificacionResult * SOAP_FMAC4 soap_get__ns1__CertificacionResponse_CertificacionResult(struct soap*, _ns1__CertificacionResponse_CertificacionResult *, const char*, const char*);

#ifndef soap_read__ns1__CertificacionResponse_CertificacionResult
#define soap_read__ns1__CertificacionResponse_CertificacionResult(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CertificacionResponse_CertificacionResult(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__CertificacionResponse_CertificacionResult * SOAP_FMAC2 soap_instantiate__ns1__CertificacionResponse_CertificacionResult(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CertificacionResponse_CertificacionResult * soap_new__ns1__CertificacionResponse_CertificacionResult(struct soap *soap, int n = -1) { return soap_instantiate__ns1__CertificacionResponse_CertificacionResult(soap, n, NULL, NULL, NULL); }

inline _ns1__CertificacionResponse_CertificacionResult * soap_new_req__ns1__CertificacionResponse_CertificacionResult(struct soap *soap) { _ns1__CertificacionResponse_CertificacionResult *_p = soap_instantiate__ns1__CertificacionResponse_CertificacionResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__CertificacionResponse_CertificacionResult * soap_new_set__ns1__CertificacionResponse_CertificacionResult(struct soap *soap, char *__any, char *__mixed) { _ns1__CertificacionResponse_CertificacionResult *_p = soap_instantiate__ns1__CertificacionResponse_CertificacionResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__CertificacionResponse_CertificacionResult::__any = __any; _p->_ns1__CertificacionResponse_CertificacionResult::__mixed = __mixed; } return _p; }

inline void soap_delete__ns1__CertificacionResponse_CertificacionResult(struct soap *soap, _ns1__CertificacionResponse_CertificacionResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CertificacionResponse_CertificacionResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin(soap), soap_serialize_std__string(soap, data), soap_begin_send(soap) || soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline std::string * soap_new_set_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline void soap_delete_std__string(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__ConciliacionResponse
#define SOAP_TYPE__ns1__ConciliacionResponse (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ConciliacionResponse(struct soap*, const char*, int, const _ns1__ConciliacionResponse *, const char*);
SOAP_FMAC3 _ns1__ConciliacionResponse * SOAP_FMAC4 soap_in__ns1__ConciliacionResponse(struct soap*, const char*, _ns1__ConciliacionResponse *, const char*);

#ifndef soap_write__ns1__ConciliacionResponse
#define soap_write__ns1__ConciliacionResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ConciliacionResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__ConciliacionResponse * SOAP_FMAC4 soap_get__ns1__ConciliacionResponse(struct soap*, _ns1__ConciliacionResponse *, const char*, const char*);

#ifndef soap_read__ns1__ConciliacionResponse
#define soap_read__ns1__ConciliacionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__ConciliacionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__ConciliacionResponse * SOAP_FMAC2 soap_instantiate__ns1__ConciliacionResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ConciliacionResponse * soap_new__ns1__ConciliacionResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__ConciliacionResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__ConciliacionResponse * soap_new_req__ns1__ConciliacionResponse(struct soap *soap) { _ns1__ConciliacionResponse *_p = soap_instantiate__ns1__ConciliacionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__ConciliacionResponse * soap_new_set__ns1__ConciliacionResponse(struct soap *soap, _ns1__ConciliacionResponse_ConciliacionResult *ConciliacionResult) { _ns1__ConciliacionResponse *_p = soap_instantiate__ns1__ConciliacionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__ConciliacionResponse::ConciliacionResult = ConciliacionResult; } return _p; }

inline void soap_delete__ns1__ConciliacionResponse(struct soap *soap, _ns1__ConciliacionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__ConciliacionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Conciliacion
#define SOAP_TYPE__ns1__Conciliacion (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Conciliacion(struct soap*, const char*, int, const _ns1__Conciliacion *, const char*);
SOAP_FMAC3 _ns1__Conciliacion * SOAP_FMAC4 soap_in__ns1__Conciliacion(struct soap*, const char*, _ns1__Conciliacion *, const char*);

#ifndef soap_write__ns1__Conciliacion
#define soap_write__ns1__Conciliacion(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:Conciliacion", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Conciliacion * SOAP_FMAC4 soap_get__ns1__Conciliacion(struct soap*, _ns1__Conciliacion *, const char*, const char*);

#ifndef soap_read__ns1__Conciliacion
#define soap_read__ns1__Conciliacion(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Conciliacion(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__Conciliacion * SOAP_FMAC2 soap_instantiate__ns1__Conciliacion(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Conciliacion * soap_new__ns1__Conciliacion(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Conciliacion(soap, n, NULL, NULL, NULL); }

inline _ns1__Conciliacion * soap_new_req__ns1__Conciliacion(struct soap *soap, int extCodSeguro, int extFolioAuto) { _ns1__Conciliacion *_p = soap_instantiate__ns1__Conciliacion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Conciliacion::extCodSeguro = extCodSeguro; _p->_ns1__Conciliacion::extFolioAuto = extFolioAuto; } return _p; }

inline _ns1__Conciliacion * soap_new_set__ns1__Conciliacion(struct soap *soap, int extCodSeguro, int extFolioAuto) { _ns1__Conciliacion *_p = soap_instantiate__ns1__Conciliacion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Conciliacion::extCodSeguro = extCodSeguro; _p->_ns1__Conciliacion::extFolioAuto = extFolioAuto; } return _p; }

inline void soap_delete__ns1__Conciliacion(struct soap *soap, _ns1__Conciliacion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Conciliacion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__AnulacionResponse
#define SOAP_TYPE__ns1__AnulacionResponse (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__AnulacionResponse(struct soap*, const char*, int, const _ns1__AnulacionResponse *, const char*);
SOAP_FMAC3 _ns1__AnulacionResponse * SOAP_FMAC4 soap_in__ns1__AnulacionResponse(struct soap*, const char*, _ns1__AnulacionResponse *, const char*);

#ifndef soap_write__ns1__AnulacionResponse
#define soap_write__ns1__AnulacionResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:AnulacionResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__AnulacionResponse * SOAP_FMAC4 soap_get__ns1__AnulacionResponse(struct soap*, _ns1__AnulacionResponse *, const char*, const char*);

#ifndef soap_read__ns1__AnulacionResponse
#define soap_read__ns1__AnulacionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__AnulacionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__AnulacionResponse * SOAP_FMAC2 soap_instantiate__ns1__AnulacionResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__AnulacionResponse * soap_new__ns1__AnulacionResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__AnulacionResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__AnulacionResponse * soap_new_req__ns1__AnulacionResponse(struct soap *soap) { _ns1__AnulacionResponse *_p = soap_instantiate__ns1__AnulacionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__AnulacionResponse * soap_new_set__ns1__AnulacionResponse(struct soap *soap, _ns1__AnulacionResponse_AnulacionResult *AnulacionResult) { _ns1__AnulacionResponse *_p = soap_instantiate__ns1__AnulacionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__AnulacionResponse::AnulacionResult = AnulacionResult; } return _p; }

inline void soap_delete__ns1__AnulacionResponse(struct soap *soap, _ns1__AnulacionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__AnulacionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Anulacion
#define SOAP_TYPE__ns1__Anulacion (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Anulacion(struct soap*, const char*, int, const _ns1__Anulacion *, const char*);
SOAP_FMAC3 _ns1__Anulacion * SOAP_FMAC4 soap_in__ns1__Anulacion(struct soap*, const char*, _ns1__Anulacion *, const char*);

#ifndef soap_write__ns1__Anulacion
#define soap_write__ns1__Anulacion(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:Anulacion", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Anulacion * SOAP_FMAC4 soap_get__ns1__Anulacion(struct soap*, _ns1__Anulacion *, const char*, const char*);

#ifndef soap_read__ns1__Anulacion
#define soap_read__ns1__Anulacion(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Anulacion(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__Anulacion * SOAP_FMAC2 soap_instantiate__ns1__Anulacion(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Anulacion * soap_new__ns1__Anulacion(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Anulacion(soap, n, NULL, NULL, NULL); }

inline _ns1__Anulacion * soap_new_req__ns1__Anulacion(struct soap *soap, int extCodSeguro, int extFolioAuto) { _ns1__Anulacion *_p = soap_instantiate__ns1__Anulacion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Anulacion::extCodSeguro = extCodSeguro; _p->_ns1__Anulacion::extFolioAuto = extFolioAuto; } return _p; }

inline _ns1__Anulacion * soap_new_set__ns1__Anulacion(struct soap *soap, int extCodSeguro, std::string *extRutBeneficiario, int extFolioAuto) { _ns1__Anulacion *_p = soap_instantiate__ns1__Anulacion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Anulacion::extCodSeguro = extCodSeguro; _p->_ns1__Anulacion::extRutBeneficiario = extRutBeneficiario; _p->_ns1__Anulacion::extFolioAuto = extFolioAuto; } return _p; }

inline void soap_delete__ns1__Anulacion(struct soap *soap, _ns1__Anulacion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Anulacion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__ConfirmacionResponse
#define SOAP_TYPE__ns1__ConfirmacionResponse (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ConfirmacionResponse(struct soap*, const char*, int, const _ns1__ConfirmacionResponse *, const char*);
SOAP_FMAC3 _ns1__ConfirmacionResponse * SOAP_FMAC4 soap_in__ns1__ConfirmacionResponse(struct soap*, const char*, _ns1__ConfirmacionResponse *, const char*);

#ifndef soap_write__ns1__ConfirmacionResponse
#define soap_write__ns1__ConfirmacionResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ConfirmacionResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__ConfirmacionResponse * SOAP_FMAC4 soap_get__ns1__ConfirmacionResponse(struct soap*, _ns1__ConfirmacionResponse *, const char*, const char*);

#ifndef soap_read__ns1__ConfirmacionResponse
#define soap_read__ns1__ConfirmacionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__ConfirmacionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__ConfirmacionResponse * SOAP_FMAC2 soap_instantiate__ns1__ConfirmacionResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ConfirmacionResponse * soap_new__ns1__ConfirmacionResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__ConfirmacionResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__ConfirmacionResponse * soap_new_req__ns1__ConfirmacionResponse(struct soap *soap) { _ns1__ConfirmacionResponse *_p = soap_instantiate__ns1__ConfirmacionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__ConfirmacionResponse * soap_new_set__ns1__ConfirmacionResponse(struct soap *soap, _ns1__ConfirmacionResponse_ConfirmacionResult *ConfirmacionResult) { _ns1__ConfirmacionResponse *_p = soap_instantiate__ns1__ConfirmacionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__ConfirmacionResponse::ConfirmacionResult = ConfirmacionResult; } return _p; }

inline void soap_delete__ns1__ConfirmacionResponse(struct soap *soap, _ns1__ConfirmacionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__ConfirmacionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Confirmacion
#define SOAP_TYPE__ns1__Confirmacion (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Confirmacion(struct soap*, const char*, int, const _ns1__Confirmacion *, const char*);
SOAP_FMAC3 _ns1__Confirmacion * SOAP_FMAC4 soap_in__ns1__Confirmacion(struct soap*, const char*, _ns1__Confirmacion *, const char*);

#ifndef soap_write__ns1__Confirmacion
#define soap_write__ns1__Confirmacion(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:Confirmacion", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Confirmacion * SOAP_FMAC4 soap_get__ns1__Confirmacion(struct soap*, _ns1__Confirmacion *, const char*, const char*);

#ifndef soap_read__ns1__Confirmacion
#define soap_read__ns1__Confirmacion(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Confirmacion(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__Confirmacion * SOAP_FMAC2 soap_instantiate__ns1__Confirmacion(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Confirmacion * soap_new__ns1__Confirmacion(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Confirmacion(soap, n, NULL, NULL, NULL); }

inline _ns1__Confirmacion * soap_new_req__ns1__Confirmacion(struct soap *soap, int extCodSeguro, int extNumOperacion, int extFolioBono, int extCodFinanciador, int extCodLugar, int extMtoTot, int extMtoCopago, int extMtoBonif) { _ns1__Confirmacion *_p = soap_instantiate__ns1__Confirmacion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Confirmacion::extCodSeguro = extCodSeguro; _p->_ns1__Confirmacion::extNumOperacion = extNumOperacion; _p->_ns1__Confirmacion::extFolioBono = extFolioBono; _p->_ns1__Confirmacion::extCodFinanciador = extCodFinanciador; _p->_ns1__Confirmacion::extCodLugar = extCodLugar; _p->_ns1__Confirmacion::extMtoTot = extMtoTot; _p->_ns1__Confirmacion::extMtoCopago = extMtoCopago; _p->_ns1__Confirmacion::extMtoBonif = extMtoBonif; } return _p; }

inline _ns1__Confirmacion * soap_new_set__ns1__Confirmacion(struct soap *soap, int extCodSeguro, int extNumOperacion, std::string *extRutBeneficiario, std::string *extRutPrestador, std::string *extFechaEmision, std::string *extRutEmisor, std::string *extRutCajero, int extFolioBono, int extCodFinanciador, int extCodLugar, int extMtoTot, int extMtoCopago, int extMtoBonif, std::string *ExtLisPrest1) { _ns1__Confirmacion *_p = soap_instantiate__ns1__Confirmacion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Confirmacion::extCodSeguro = extCodSeguro; _p->_ns1__Confirmacion::extNumOperacion = extNumOperacion; _p->_ns1__Confirmacion::extRutBeneficiario = extRutBeneficiario; _p->_ns1__Confirmacion::extRutPrestador = extRutPrestador; _p->_ns1__Confirmacion::extFechaEmision = extFechaEmision; _p->_ns1__Confirmacion::extRutEmisor = extRutEmisor; _p->_ns1__Confirmacion::extRutCajero = extRutCajero; _p->_ns1__Confirmacion::extFolioBono = extFolioBono; _p->_ns1__Confirmacion::extCodFinanciador = extCodFinanciador; _p->_ns1__Confirmacion::extCodLugar = extCodLugar; _p->_ns1__Confirmacion::extMtoTot = extMtoTot; _p->_ns1__Confirmacion::extMtoCopago = extMtoCopago; _p->_ns1__Confirmacion::extMtoBonif = extMtoBonif; _p->_ns1__Confirmacion::ExtLisPrest1 = ExtLisPrest1; } return _p; }

inline void soap_delete__ns1__Confirmacion(struct soap *soap, _ns1__Confirmacion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Confirmacion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__CertificacionResponse
#define SOAP_TYPE__ns1__CertificacionResponse (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__CertificacionResponse(struct soap*, const char*, int, const _ns1__CertificacionResponse *, const char*);
SOAP_FMAC3 _ns1__CertificacionResponse * SOAP_FMAC4 soap_in__ns1__CertificacionResponse(struct soap*, const char*, _ns1__CertificacionResponse *, const char*);

#ifndef soap_write__ns1__CertificacionResponse
#define soap_write__ns1__CertificacionResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:CertificacionResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__CertificacionResponse * SOAP_FMAC4 soap_get__ns1__CertificacionResponse(struct soap*, _ns1__CertificacionResponse *, const char*, const char*);

#ifndef soap_read__ns1__CertificacionResponse
#define soap_read__ns1__CertificacionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__CertificacionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__CertificacionResponse * SOAP_FMAC2 soap_instantiate__ns1__CertificacionResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__CertificacionResponse * soap_new__ns1__CertificacionResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__CertificacionResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__CertificacionResponse * soap_new_req__ns1__CertificacionResponse(struct soap *soap) { _ns1__CertificacionResponse *_p = soap_instantiate__ns1__CertificacionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__CertificacionResponse * soap_new_set__ns1__CertificacionResponse(struct soap *soap, _ns1__CertificacionResponse_CertificacionResult *CertificacionResult) { _ns1__CertificacionResponse *_p = soap_instantiate__ns1__CertificacionResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__CertificacionResponse::CertificacionResult = CertificacionResult; } return _p; }

inline void soap_delete__ns1__CertificacionResponse(struct soap *soap, _ns1__CertificacionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__CertificacionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Certificacion
#define SOAP_TYPE__ns1__Certificacion (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Certificacion(struct soap*, const char*, int, const _ns1__Certificacion *, const char*);
SOAP_FMAC3 _ns1__Certificacion * SOAP_FMAC4 soap_in__ns1__Certificacion(struct soap*, const char*, _ns1__Certificacion *, const char*);

#ifndef soap_write__ns1__Certificacion
#define soap_write__ns1__Certificacion(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:Certificacion", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Certificacion * SOAP_FMAC4 soap_get__ns1__Certificacion(struct soap*, _ns1__Certificacion *, const char*, const char*);

#ifndef soap_read__ns1__Certificacion
#define soap_read__ns1__Certificacion(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Certificacion(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__Certificacion * SOAP_FMAC2 soap_instantiate__ns1__Certificacion(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Certificacion * soap_new__ns1__Certificacion(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Certificacion(soap, n, NULL, NULL, NULL); }

inline _ns1__Certificacion * soap_new_req__ns1__Certificacion(struct soap *soap, int extCodSeguro, int extCodFinanciador, int extCodLugar, int extNumOperacion) { _ns1__Certificacion *_p = soap_instantiate__ns1__Certificacion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Certificacion::extCodSeguro = extCodSeguro; _p->_ns1__Certificacion::extCodFinanciador = extCodFinanciador; _p->_ns1__Certificacion::extCodLugar = extCodLugar; _p->_ns1__Certificacion::extNumOperacion = extNumOperacion; } return _p; }

inline _ns1__Certificacion * soap_new_set__ns1__Certificacion(struct soap *soap, int extCodSeguro, std::string *extRutBeneficiario, std::string *extRutPrestador, int extCodFinanciador, int extCodLugar, int extNumOperacion, std::string *ExtLisPrest1, std::string *ExtLisPrest2, std::string *ExtLisPrest3, std::string *ExtLisPrest4, std::string *ExtLisPrest5, std::string *ExtLisPrest6) { _ns1__Certificacion *_p = soap_instantiate__ns1__Certificacion(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Certificacion::extCodSeguro = extCodSeguro; _p->_ns1__Certificacion::extRutBeneficiario = extRutBeneficiario; _p->_ns1__Certificacion::extRutPrestador = extRutPrestador; _p->_ns1__Certificacion::extCodFinanciador = extCodFinanciador; _p->_ns1__Certificacion::extCodLugar = extCodLugar; _p->_ns1__Certificacion::extNumOperacion = extNumOperacion; _p->_ns1__Certificacion::ExtLisPrest1 = ExtLisPrest1; _p->_ns1__Certificacion::ExtLisPrest2 = ExtLisPrest2; _p->_ns1__Certificacion::ExtLisPrest3 = ExtLisPrest3; _p->_ns1__Certificacion::ExtLisPrest4 = ExtLisPrest4; _p->_ns1__Certificacion::ExtLisPrest5 = ExtLisPrest5; _p->_ns1__Certificacion::ExtLisPrest6 = ExtLisPrest6; } return _p; }

inline void soap_delete__ns1__Certificacion(struct soap *soap, _ns1__Certificacion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Certificacion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Fault(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Header(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__Conciliacion_
#define SOAP_TYPE___ns1__Conciliacion_ (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Conciliacion_(struct soap*, struct __ns1__Conciliacion_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Conciliacion_(struct soap*, const struct __ns1__Conciliacion_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Conciliacion_(struct soap*, const char*, int, const struct __ns1__Conciliacion_ *, const char*);
SOAP_FMAC3 struct __ns1__Conciliacion_ * SOAP_FMAC4 soap_in___ns1__Conciliacion_(struct soap*, const char*, struct __ns1__Conciliacion_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Conciliacion_(struct soap*, const struct __ns1__Conciliacion_ *, const char*, const char*);

#ifndef soap_write___ns1__Conciliacion_
#define soap_write___ns1__Conciliacion_(soap, data) ( soap_begin(soap), soap_serialize___ns1__Conciliacion_(soap, data), soap_begin_send(soap) || soap_put___ns1__Conciliacion_(soap, data, "-ns1:Conciliacion", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Conciliacion_ * SOAP_FMAC4 soap_get___ns1__Conciliacion_(struct soap*, struct __ns1__Conciliacion_ *, const char*, const char*);

#ifndef soap_read___ns1__Conciliacion_
#define soap_read___ns1__Conciliacion_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Conciliacion_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Conciliacion_ * SOAP_FMAC2 soap_instantiate___ns1__Conciliacion_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Conciliacion_ * soap_new___ns1__Conciliacion_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Conciliacion_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Conciliacion_ * soap_new_req___ns1__Conciliacion_(struct soap *soap) { struct __ns1__Conciliacion_ *_p = soap_instantiate___ns1__Conciliacion_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Conciliacion_(soap, _p); } return _p; }

inline struct __ns1__Conciliacion_ * soap_new_set___ns1__Conciliacion_(struct soap *soap, _ns1__Conciliacion *ns1__Conciliacion) { struct __ns1__Conciliacion_ *_p = soap_instantiate___ns1__Conciliacion_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Conciliacion_(soap, _p); _p->ns1__Conciliacion = ns1__Conciliacion; } return _p; }

inline void soap_delete___ns1__Conciliacion_(struct soap *soap, struct __ns1__Conciliacion_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Conciliacion_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Anulacion_
#define SOAP_TYPE___ns1__Anulacion_ (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Anulacion_(struct soap*, struct __ns1__Anulacion_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Anulacion_(struct soap*, const struct __ns1__Anulacion_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Anulacion_(struct soap*, const char*, int, const struct __ns1__Anulacion_ *, const char*);
SOAP_FMAC3 struct __ns1__Anulacion_ * SOAP_FMAC4 soap_in___ns1__Anulacion_(struct soap*, const char*, struct __ns1__Anulacion_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Anulacion_(struct soap*, const struct __ns1__Anulacion_ *, const char*, const char*);

#ifndef soap_write___ns1__Anulacion_
#define soap_write___ns1__Anulacion_(soap, data) ( soap_begin(soap), soap_serialize___ns1__Anulacion_(soap, data), soap_begin_send(soap) || soap_put___ns1__Anulacion_(soap, data, "-ns1:Anulacion", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Anulacion_ * SOAP_FMAC4 soap_get___ns1__Anulacion_(struct soap*, struct __ns1__Anulacion_ *, const char*, const char*);

#ifndef soap_read___ns1__Anulacion_
#define soap_read___ns1__Anulacion_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Anulacion_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Anulacion_ * SOAP_FMAC2 soap_instantiate___ns1__Anulacion_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Anulacion_ * soap_new___ns1__Anulacion_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Anulacion_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Anulacion_ * soap_new_req___ns1__Anulacion_(struct soap *soap) { struct __ns1__Anulacion_ *_p = soap_instantiate___ns1__Anulacion_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Anulacion_(soap, _p); } return _p; }

inline struct __ns1__Anulacion_ * soap_new_set___ns1__Anulacion_(struct soap *soap, _ns1__Anulacion *ns1__Anulacion) { struct __ns1__Anulacion_ *_p = soap_instantiate___ns1__Anulacion_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Anulacion_(soap, _p); _p->ns1__Anulacion = ns1__Anulacion; } return _p; }

inline void soap_delete___ns1__Anulacion_(struct soap *soap, struct __ns1__Anulacion_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Anulacion_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Confirmacion_
#define SOAP_TYPE___ns1__Confirmacion_ (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Confirmacion_(struct soap*, struct __ns1__Confirmacion_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Confirmacion_(struct soap*, const struct __ns1__Confirmacion_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Confirmacion_(struct soap*, const char*, int, const struct __ns1__Confirmacion_ *, const char*);
SOAP_FMAC3 struct __ns1__Confirmacion_ * SOAP_FMAC4 soap_in___ns1__Confirmacion_(struct soap*, const char*, struct __ns1__Confirmacion_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Confirmacion_(struct soap*, const struct __ns1__Confirmacion_ *, const char*, const char*);

#ifndef soap_write___ns1__Confirmacion_
#define soap_write___ns1__Confirmacion_(soap, data) ( soap_begin(soap), soap_serialize___ns1__Confirmacion_(soap, data), soap_begin_send(soap) || soap_put___ns1__Confirmacion_(soap, data, "-ns1:Confirmacion", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Confirmacion_ * SOAP_FMAC4 soap_get___ns1__Confirmacion_(struct soap*, struct __ns1__Confirmacion_ *, const char*, const char*);

#ifndef soap_read___ns1__Confirmacion_
#define soap_read___ns1__Confirmacion_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Confirmacion_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Confirmacion_ * SOAP_FMAC2 soap_instantiate___ns1__Confirmacion_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Confirmacion_ * soap_new___ns1__Confirmacion_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Confirmacion_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Confirmacion_ * soap_new_req___ns1__Confirmacion_(struct soap *soap) { struct __ns1__Confirmacion_ *_p = soap_instantiate___ns1__Confirmacion_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Confirmacion_(soap, _p); } return _p; }

inline struct __ns1__Confirmacion_ * soap_new_set___ns1__Confirmacion_(struct soap *soap, _ns1__Confirmacion *ns1__Confirmacion) { struct __ns1__Confirmacion_ *_p = soap_instantiate___ns1__Confirmacion_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Confirmacion_(soap, _p); _p->ns1__Confirmacion = ns1__Confirmacion; } return _p; }

inline void soap_delete___ns1__Confirmacion_(struct soap *soap, struct __ns1__Confirmacion_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Confirmacion_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Certificacion_
#define SOAP_TYPE___ns1__Certificacion_ (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Certificacion_(struct soap*, struct __ns1__Certificacion_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Certificacion_(struct soap*, const struct __ns1__Certificacion_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Certificacion_(struct soap*, const char*, int, const struct __ns1__Certificacion_ *, const char*);
SOAP_FMAC3 struct __ns1__Certificacion_ * SOAP_FMAC4 soap_in___ns1__Certificacion_(struct soap*, const char*, struct __ns1__Certificacion_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Certificacion_(struct soap*, const struct __ns1__Certificacion_ *, const char*, const char*);

#ifndef soap_write___ns1__Certificacion_
#define soap_write___ns1__Certificacion_(soap, data) ( soap_begin(soap), soap_serialize___ns1__Certificacion_(soap, data), soap_begin_send(soap) || soap_put___ns1__Certificacion_(soap, data, "-ns1:Certificacion", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Certificacion_ * SOAP_FMAC4 soap_get___ns1__Certificacion_(struct soap*, struct __ns1__Certificacion_ *, const char*, const char*);

#ifndef soap_read___ns1__Certificacion_
#define soap_read___ns1__Certificacion_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Certificacion_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Certificacion_ * SOAP_FMAC2 soap_instantiate___ns1__Certificacion_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Certificacion_ * soap_new___ns1__Certificacion_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Certificacion_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Certificacion_ * soap_new_req___ns1__Certificacion_(struct soap *soap) { struct __ns1__Certificacion_ *_p = soap_instantiate___ns1__Certificacion_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Certificacion_(soap, _p); } return _p; }

inline struct __ns1__Certificacion_ * soap_new_set___ns1__Certificacion_(struct soap *soap, _ns1__Certificacion *ns1__Certificacion) { struct __ns1__Certificacion_ *_p = soap_instantiate___ns1__Certificacion_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Certificacion_(soap, _p); _p->ns1__Certificacion = ns1__Certificacion; } return _p; }

inline void soap_delete___ns1__Certificacion_(struct soap *soap, struct __ns1__Certificacion_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Certificacion_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Conciliacion
#define SOAP_TYPE___ns1__Conciliacion (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Conciliacion(struct soap*, struct __ns1__Conciliacion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Conciliacion(struct soap*, const struct __ns1__Conciliacion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Conciliacion(struct soap*, const char*, int, const struct __ns1__Conciliacion *, const char*);
SOAP_FMAC3 struct __ns1__Conciliacion * SOAP_FMAC4 soap_in___ns1__Conciliacion(struct soap*, const char*, struct __ns1__Conciliacion *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Conciliacion(struct soap*, const struct __ns1__Conciliacion *, const char*, const char*);

#ifndef soap_write___ns1__Conciliacion
#define soap_write___ns1__Conciliacion(soap, data) ( soap_begin(soap), soap_serialize___ns1__Conciliacion(soap, data), soap_begin_send(soap) || soap_put___ns1__Conciliacion(soap, data, "-ns1:Conciliacion", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Conciliacion * SOAP_FMAC4 soap_get___ns1__Conciliacion(struct soap*, struct __ns1__Conciliacion *, const char*, const char*);

#ifndef soap_read___ns1__Conciliacion
#define soap_read___ns1__Conciliacion(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Conciliacion(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Conciliacion * SOAP_FMAC2 soap_instantiate___ns1__Conciliacion(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Conciliacion * soap_new___ns1__Conciliacion(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Conciliacion(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Conciliacion * soap_new_req___ns1__Conciliacion(struct soap *soap) { struct __ns1__Conciliacion *_p = soap_instantiate___ns1__Conciliacion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Conciliacion(soap, _p); } return _p; }

inline struct __ns1__Conciliacion * soap_new_set___ns1__Conciliacion(struct soap *soap, _ns1__Conciliacion *ns1__Conciliacion) { struct __ns1__Conciliacion *_p = soap_instantiate___ns1__Conciliacion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Conciliacion(soap, _p); _p->ns1__Conciliacion = ns1__Conciliacion; } return _p; }

inline void soap_delete___ns1__Conciliacion(struct soap *soap, struct __ns1__Conciliacion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Conciliacion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Anulacion
#define SOAP_TYPE___ns1__Anulacion (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Anulacion(struct soap*, struct __ns1__Anulacion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Anulacion(struct soap*, const struct __ns1__Anulacion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Anulacion(struct soap*, const char*, int, const struct __ns1__Anulacion *, const char*);
SOAP_FMAC3 struct __ns1__Anulacion * SOAP_FMAC4 soap_in___ns1__Anulacion(struct soap*, const char*, struct __ns1__Anulacion *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Anulacion(struct soap*, const struct __ns1__Anulacion *, const char*, const char*);

#ifndef soap_write___ns1__Anulacion
#define soap_write___ns1__Anulacion(soap, data) ( soap_begin(soap), soap_serialize___ns1__Anulacion(soap, data), soap_begin_send(soap) || soap_put___ns1__Anulacion(soap, data, "-ns1:Anulacion", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Anulacion * SOAP_FMAC4 soap_get___ns1__Anulacion(struct soap*, struct __ns1__Anulacion *, const char*, const char*);

#ifndef soap_read___ns1__Anulacion
#define soap_read___ns1__Anulacion(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Anulacion(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Anulacion * SOAP_FMAC2 soap_instantiate___ns1__Anulacion(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Anulacion * soap_new___ns1__Anulacion(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Anulacion(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Anulacion * soap_new_req___ns1__Anulacion(struct soap *soap) { struct __ns1__Anulacion *_p = soap_instantiate___ns1__Anulacion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Anulacion(soap, _p); } return _p; }

inline struct __ns1__Anulacion * soap_new_set___ns1__Anulacion(struct soap *soap, _ns1__Anulacion *ns1__Anulacion) { struct __ns1__Anulacion *_p = soap_instantiate___ns1__Anulacion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Anulacion(soap, _p); _p->ns1__Anulacion = ns1__Anulacion; } return _p; }

inline void soap_delete___ns1__Anulacion(struct soap *soap, struct __ns1__Anulacion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Anulacion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Confirmacion
#define SOAP_TYPE___ns1__Confirmacion (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Confirmacion(struct soap*, struct __ns1__Confirmacion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Confirmacion(struct soap*, const struct __ns1__Confirmacion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Confirmacion(struct soap*, const char*, int, const struct __ns1__Confirmacion *, const char*);
SOAP_FMAC3 struct __ns1__Confirmacion * SOAP_FMAC4 soap_in___ns1__Confirmacion(struct soap*, const char*, struct __ns1__Confirmacion *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Confirmacion(struct soap*, const struct __ns1__Confirmacion *, const char*, const char*);

#ifndef soap_write___ns1__Confirmacion
#define soap_write___ns1__Confirmacion(soap, data) ( soap_begin(soap), soap_serialize___ns1__Confirmacion(soap, data), soap_begin_send(soap) || soap_put___ns1__Confirmacion(soap, data, "-ns1:Confirmacion", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Confirmacion * SOAP_FMAC4 soap_get___ns1__Confirmacion(struct soap*, struct __ns1__Confirmacion *, const char*, const char*);

#ifndef soap_read___ns1__Confirmacion
#define soap_read___ns1__Confirmacion(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Confirmacion(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Confirmacion * SOAP_FMAC2 soap_instantiate___ns1__Confirmacion(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Confirmacion * soap_new___ns1__Confirmacion(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Confirmacion(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Confirmacion * soap_new_req___ns1__Confirmacion(struct soap *soap) { struct __ns1__Confirmacion *_p = soap_instantiate___ns1__Confirmacion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Confirmacion(soap, _p); } return _p; }

inline struct __ns1__Confirmacion * soap_new_set___ns1__Confirmacion(struct soap *soap, _ns1__Confirmacion *ns1__Confirmacion) { struct __ns1__Confirmacion *_p = soap_instantiate___ns1__Confirmacion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Confirmacion(soap, _p); _p->ns1__Confirmacion = ns1__Confirmacion; } return _p; }

inline void soap_delete___ns1__Confirmacion(struct soap *soap, struct __ns1__Confirmacion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Confirmacion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Certificacion
#define SOAP_TYPE___ns1__Certificacion (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Certificacion(struct soap*, struct __ns1__Certificacion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Certificacion(struct soap*, const struct __ns1__Certificacion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Certificacion(struct soap*, const char*, int, const struct __ns1__Certificacion *, const char*);
SOAP_FMAC3 struct __ns1__Certificacion * SOAP_FMAC4 soap_in___ns1__Certificacion(struct soap*, const char*, struct __ns1__Certificacion *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Certificacion(struct soap*, const struct __ns1__Certificacion *, const char*, const char*);

#ifndef soap_write___ns1__Certificacion
#define soap_write___ns1__Certificacion(soap, data) ( soap_begin(soap), soap_serialize___ns1__Certificacion(soap, data), soap_begin_send(soap) || soap_put___ns1__Certificacion(soap, data, "-ns1:Certificacion", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Certificacion * SOAP_FMAC4 soap_get___ns1__Certificacion(struct soap*, struct __ns1__Certificacion *, const char*, const char*);

#ifndef soap_read___ns1__Certificacion
#define soap_read___ns1__Certificacion(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Certificacion(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Certificacion * SOAP_FMAC2 soap_instantiate___ns1__Certificacion(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Certificacion * soap_new___ns1__Certificacion(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Certificacion(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Certificacion * soap_new_req___ns1__Certificacion(struct soap *soap) { struct __ns1__Certificacion *_p = soap_instantiate___ns1__Certificacion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Certificacion(soap, _p); } return _p; }

inline struct __ns1__Certificacion * soap_new_set___ns1__Certificacion(struct soap *soap, _ns1__Certificacion *ns1__Certificacion) { struct __ns1__Certificacion *_p = soap_instantiate___ns1__Certificacion(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Certificacion(soap, _p); _p->ns1__Certificacion = ns1__Certificacion; } return _p; }

inline void soap_delete___ns1__Certificacion(struct soap *soap, struct __ns1__Certificacion *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Certificacion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns1__ConciliacionResponse
#define SOAP_TYPE_PointerTo_ns1__ConciliacionResponse (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ConciliacionResponse(struct soap*, _ns1__ConciliacionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ConciliacionResponse(struct soap*, const char *, int, _ns1__ConciliacionResponse *const*, const char *);
SOAP_FMAC3 _ns1__ConciliacionResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__ConciliacionResponse(struct soap*, const char*, _ns1__ConciliacionResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ConciliacionResponse(struct soap*, _ns1__ConciliacionResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__ConciliacionResponse
#define soap_write_PointerTo_ns1__ConciliacionResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__ConciliacionResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__ConciliacionResponse(soap, data, "ns1:ConciliacionResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__ConciliacionResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__ConciliacionResponse(struct soap*, _ns1__ConciliacionResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__ConciliacionResponse
#define soap_read_PointerTo_ns1__ConciliacionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__ConciliacionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__Conciliacion
#define SOAP_TYPE_PointerTo_ns1__Conciliacion (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Conciliacion(struct soap*, _ns1__Conciliacion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Conciliacion(struct soap*, const char *, int, _ns1__Conciliacion *const*, const char *);
SOAP_FMAC3 _ns1__Conciliacion ** SOAP_FMAC4 soap_in_PointerTo_ns1__Conciliacion(struct soap*, const char*, _ns1__Conciliacion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Conciliacion(struct soap*, _ns1__Conciliacion *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Conciliacion
#define soap_write_PointerTo_ns1__Conciliacion(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__Conciliacion(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__Conciliacion(soap, data, "ns1:Conciliacion", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Conciliacion ** SOAP_FMAC4 soap_get_PointerTo_ns1__Conciliacion(struct soap*, _ns1__Conciliacion **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Conciliacion
#define soap_read_PointerTo_ns1__Conciliacion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Conciliacion(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__AnulacionResponse
#define SOAP_TYPE_PointerTo_ns1__AnulacionResponse (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__AnulacionResponse(struct soap*, _ns1__AnulacionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__AnulacionResponse(struct soap*, const char *, int, _ns1__AnulacionResponse *const*, const char *);
SOAP_FMAC3 _ns1__AnulacionResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__AnulacionResponse(struct soap*, const char*, _ns1__AnulacionResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__AnulacionResponse(struct soap*, _ns1__AnulacionResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__AnulacionResponse
#define soap_write_PointerTo_ns1__AnulacionResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__AnulacionResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__AnulacionResponse(soap, data, "ns1:AnulacionResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__AnulacionResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__AnulacionResponse(struct soap*, _ns1__AnulacionResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__AnulacionResponse
#define soap_read_PointerTo_ns1__AnulacionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__AnulacionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__Anulacion
#define SOAP_TYPE_PointerTo_ns1__Anulacion (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Anulacion(struct soap*, _ns1__Anulacion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Anulacion(struct soap*, const char *, int, _ns1__Anulacion *const*, const char *);
SOAP_FMAC3 _ns1__Anulacion ** SOAP_FMAC4 soap_in_PointerTo_ns1__Anulacion(struct soap*, const char*, _ns1__Anulacion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Anulacion(struct soap*, _ns1__Anulacion *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Anulacion
#define soap_write_PointerTo_ns1__Anulacion(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__Anulacion(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__Anulacion(soap, data, "ns1:Anulacion", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Anulacion ** SOAP_FMAC4 soap_get_PointerTo_ns1__Anulacion(struct soap*, _ns1__Anulacion **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Anulacion
#define soap_read_PointerTo_ns1__Anulacion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Anulacion(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__ConfirmacionResponse
#define SOAP_TYPE_PointerTo_ns1__ConfirmacionResponse (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ConfirmacionResponse(struct soap*, _ns1__ConfirmacionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ConfirmacionResponse(struct soap*, const char *, int, _ns1__ConfirmacionResponse *const*, const char *);
SOAP_FMAC3 _ns1__ConfirmacionResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__ConfirmacionResponse(struct soap*, const char*, _ns1__ConfirmacionResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ConfirmacionResponse(struct soap*, _ns1__ConfirmacionResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__ConfirmacionResponse
#define soap_write_PointerTo_ns1__ConfirmacionResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__ConfirmacionResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__ConfirmacionResponse(soap, data, "ns1:ConfirmacionResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__ConfirmacionResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__ConfirmacionResponse(struct soap*, _ns1__ConfirmacionResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__ConfirmacionResponse
#define soap_read_PointerTo_ns1__ConfirmacionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__ConfirmacionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__Confirmacion
#define SOAP_TYPE_PointerTo_ns1__Confirmacion (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Confirmacion(struct soap*, _ns1__Confirmacion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Confirmacion(struct soap*, const char *, int, _ns1__Confirmacion *const*, const char *);
SOAP_FMAC3 _ns1__Confirmacion ** SOAP_FMAC4 soap_in_PointerTo_ns1__Confirmacion(struct soap*, const char*, _ns1__Confirmacion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Confirmacion(struct soap*, _ns1__Confirmacion *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Confirmacion
#define soap_write_PointerTo_ns1__Confirmacion(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__Confirmacion(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__Confirmacion(soap, data, "ns1:Confirmacion", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Confirmacion ** SOAP_FMAC4 soap_get_PointerTo_ns1__Confirmacion(struct soap*, _ns1__Confirmacion **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Confirmacion
#define soap_read_PointerTo_ns1__Confirmacion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Confirmacion(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__CertificacionResponse
#define SOAP_TYPE_PointerTo_ns1__CertificacionResponse (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CertificacionResponse(struct soap*, _ns1__CertificacionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CertificacionResponse(struct soap*, const char *, int, _ns1__CertificacionResponse *const*, const char *);
SOAP_FMAC3 _ns1__CertificacionResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__CertificacionResponse(struct soap*, const char*, _ns1__CertificacionResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CertificacionResponse(struct soap*, _ns1__CertificacionResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__CertificacionResponse
#define soap_write_PointerTo_ns1__CertificacionResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__CertificacionResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__CertificacionResponse(soap, data, "ns1:CertificacionResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__CertificacionResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__CertificacionResponse(struct soap*, _ns1__CertificacionResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CertificacionResponse
#define soap_read_PointerTo_ns1__CertificacionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CertificacionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__Certificacion
#define SOAP_TYPE_PointerTo_ns1__Certificacion (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Certificacion(struct soap*, _ns1__Certificacion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Certificacion(struct soap*, const char *, int, _ns1__Certificacion *const*, const char *);
SOAP_FMAC3 _ns1__Certificacion ** SOAP_FMAC4 soap_in_PointerTo_ns1__Certificacion(struct soap*, const char*, _ns1__Certificacion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Certificacion(struct soap*, _ns1__Certificacion *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Certificacion
#define soap_write_PointerTo_ns1__Certificacion(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__Certificacion(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__Certificacion(soap, data, "ns1:Certificacion", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Certificacion ** SOAP_FMAC4 soap_get_PointerTo_ns1__Certificacion(struct soap*, _ns1__Certificacion **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Certificacion
#define soap_read_PointerTo_ns1__Certificacion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Certificacion(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__ConciliacionResponse_ConciliacionResult
#define SOAP_TYPE_PointerTo_ns1__ConciliacionResponse_ConciliacionResult (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ConciliacionResponse_ConciliacionResult(struct soap*, _ns1__ConciliacionResponse_ConciliacionResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ConciliacionResponse_ConciliacionResult(struct soap*, const char *, int, _ns1__ConciliacionResponse_ConciliacionResult *const*, const char *);
SOAP_FMAC3 _ns1__ConciliacionResponse_ConciliacionResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__ConciliacionResponse_ConciliacionResult(struct soap*, const char*, _ns1__ConciliacionResponse_ConciliacionResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ConciliacionResponse_ConciliacionResult(struct soap*, _ns1__ConciliacionResponse_ConciliacionResult *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__ConciliacionResponse_ConciliacionResult
#define soap_write_PointerTo_ns1__ConciliacionResponse_ConciliacionResult(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__ConciliacionResponse_ConciliacionResult(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__ConciliacionResponse_ConciliacionResult(soap, data, "ns1:ConciliacionResponse-ConciliacionResult", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__ConciliacionResponse_ConciliacionResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__ConciliacionResponse_ConciliacionResult(struct soap*, _ns1__ConciliacionResponse_ConciliacionResult **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__ConciliacionResponse_ConciliacionResult
#define soap_read_PointerTo_ns1__ConciliacionResponse_ConciliacionResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__ConciliacionResponse_ConciliacionResult(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__AnulacionResponse_AnulacionResult
#define SOAP_TYPE_PointerTo_ns1__AnulacionResponse_AnulacionResult (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__AnulacionResponse_AnulacionResult(struct soap*, _ns1__AnulacionResponse_AnulacionResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__AnulacionResponse_AnulacionResult(struct soap*, const char *, int, _ns1__AnulacionResponse_AnulacionResult *const*, const char *);
SOAP_FMAC3 _ns1__AnulacionResponse_AnulacionResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__AnulacionResponse_AnulacionResult(struct soap*, const char*, _ns1__AnulacionResponse_AnulacionResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__AnulacionResponse_AnulacionResult(struct soap*, _ns1__AnulacionResponse_AnulacionResult *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__AnulacionResponse_AnulacionResult
#define soap_write_PointerTo_ns1__AnulacionResponse_AnulacionResult(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__AnulacionResponse_AnulacionResult(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__AnulacionResponse_AnulacionResult(soap, data, "ns1:AnulacionResponse-AnulacionResult", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__AnulacionResponse_AnulacionResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__AnulacionResponse_AnulacionResult(struct soap*, _ns1__AnulacionResponse_AnulacionResult **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__AnulacionResponse_AnulacionResult
#define soap_read_PointerTo_ns1__AnulacionResponse_AnulacionResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__AnulacionResponse_AnulacionResult(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__ConfirmacionResponse_ConfirmacionResult
#define SOAP_TYPE_PointerTo_ns1__ConfirmacionResponse_ConfirmacionResult (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ConfirmacionResponse_ConfirmacionResult(struct soap*, _ns1__ConfirmacionResponse_ConfirmacionResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ConfirmacionResponse_ConfirmacionResult(struct soap*, const char *, int, _ns1__ConfirmacionResponse_ConfirmacionResult *const*, const char *);
SOAP_FMAC3 _ns1__ConfirmacionResponse_ConfirmacionResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__ConfirmacionResponse_ConfirmacionResult(struct soap*, const char*, _ns1__ConfirmacionResponse_ConfirmacionResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ConfirmacionResponse_ConfirmacionResult(struct soap*, _ns1__ConfirmacionResponse_ConfirmacionResult *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__ConfirmacionResponse_ConfirmacionResult
#define soap_write_PointerTo_ns1__ConfirmacionResponse_ConfirmacionResult(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__ConfirmacionResponse_ConfirmacionResult(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__ConfirmacionResponse_ConfirmacionResult(soap, data, "ns1:ConfirmacionResponse-ConfirmacionResult", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__ConfirmacionResponse_ConfirmacionResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__ConfirmacionResponse_ConfirmacionResult(struct soap*, _ns1__ConfirmacionResponse_ConfirmacionResult **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__ConfirmacionResponse_ConfirmacionResult
#define soap_read_PointerTo_ns1__ConfirmacionResponse_ConfirmacionResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__ConfirmacionResponse_ConfirmacionResult(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__CertificacionResponse_CertificacionResult
#define SOAP_TYPE_PointerTo_ns1__CertificacionResponse_CertificacionResult (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__CertificacionResponse_CertificacionResult(struct soap*, _ns1__CertificacionResponse_CertificacionResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__CertificacionResponse_CertificacionResult(struct soap*, const char *, int, _ns1__CertificacionResponse_CertificacionResult *const*, const char *);
SOAP_FMAC3 _ns1__CertificacionResponse_CertificacionResult ** SOAP_FMAC4 soap_in_PointerTo_ns1__CertificacionResponse_CertificacionResult(struct soap*, const char*, _ns1__CertificacionResponse_CertificacionResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__CertificacionResponse_CertificacionResult(struct soap*, _ns1__CertificacionResponse_CertificacionResult *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__CertificacionResponse_CertificacionResult
#define soap_write_PointerTo_ns1__CertificacionResponse_CertificacionResult(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__CertificacionResponse_CertificacionResult(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__CertificacionResponse_CertificacionResult(soap, data, "ns1:CertificacionResponse-CertificacionResult", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__CertificacionResponse_CertificacionResult ** SOAP_FMAC4 soap_get_PointerTo_ns1__CertificacionResponse_CertificacionResult(struct soap*, _ns1__CertificacionResponse_CertificacionResult **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__CertificacionResponse_CertificacionResult
#define soap_read_PointerTo_ns1__CertificacionResponse_CertificacionResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__CertificacionResponse_CertificacionResult(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_begin(soap), soap_serialize_PointerTostd__string(soap, data), soap_begin_send(soap) || soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin(soap), soap_serialize__QName(soap, data), soap_begin_send(soap) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin(soap), soap_serialize_string(soap, data), soap_begin_send(soap) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

/* End of soapH.h */
