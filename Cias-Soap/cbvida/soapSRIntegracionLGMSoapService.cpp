/* soapSRIntegracionLGMSoapService.cpp
   Generated by gSOAP 2.8.14 from cbvida.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapSRIntegracionLGMSoapService.h"

SRIntegracionLGMSoapService::SRIntegracionLGMSoapService()
{	this->soap = soap_new();
	this->own = true;
	SRIntegracionLGMSoapService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

SRIntegracionLGMSoapService::SRIntegracionLGMSoapService(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	SRIntegracionLGMSoapService_init(_soap->imode, _soap->omode);
}

SRIntegracionLGMSoapService::SRIntegracionLGMSoapService(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	SRIntegracionLGMSoapService_init(iomode, iomode);
}

SRIntegracionLGMSoapService::SRIntegracionLGMSoapService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	SRIntegracionLGMSoapService_init(imode, omode);
}

SRIntegracionLGMSoapService::~SRIntegracionLGMSoapService()
{	if (this->own)
		soap_free(this->soap);
}

void SRIntegracionLGMSoapService::SRIntegracionLGMSoapService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
};

void SRIntegracionLGMSoapService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void SRIntegracionLGMSoapService::reset()
{	destroy();
	soap_done(this->soap);
	soap_init(this->soap);
	SRIntegracionLGMSoapService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
SRIntegracionLGMSoapService *SRIntegracionLGMSoapService::copy()
{	SRIntegracionLGMSoapService *dup = SOAP_NEW_COPY(SRIntegracionLGMSoapService);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

int SRIntegracionLGMSoapService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int SRIntegracionLGMSoapService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int SRIntegracionLGMSoapService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int SRIntegracionLGMSoapService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int SRIntegracionLGMSoapService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int SRIntegracionLGMSoapService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void SRIntegracionLGMSoapService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void SRIntegracionLGMSoapService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *SRIntegracionLGMSoapService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void SRIntegracionLGMSoapService::soap_noheader()
{	this->soap->header = NULL;
}

const SOAP_ENV__Header *SRIntegracionLGMSoapService::soap_header()
{	return this->soap->header;
}

int SRIntegracionLGMSoapService::run(int port)
{	if (soap_valid_socket(this->soap->master) || soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()) || serve())
				return this->soap->error;
			soap_destroy(this->soap);
			soap_end(this->soap);
		}
	}
	else
		return this->soap->error;
	return SOAP_OK;
}

SOAP_SOCKET SRIntegracionLGMSoapService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET SRIntegracionLGMSoapService::accept()
{	return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int SRIntegracionLGMSoapService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif

int SRIntegracionLGMSoapService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->soap->max_keep_alive;
#endif
	do
	{

#ifndef WITH_FASTCGI
		if (this->soap->max_keep_alive > 0 && !--k)
			this->soap->keep_alive = 0;
#endif

		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if (dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___ns1__Certificacion(SRIntegracionLGMSoapService*);
static int serve___ns1__Confirmacion(SRIntegracionLGMSoapService*);
static int serve___ns1__Anulacion(SRIntegracionLGMSoapService*);
static int serve___ns1__Conciliacion(SRIntegracionLGMSoapService*);
static int serve___ns1__Certificacion_(SRIntegracionLGMSoapService*);
static int serve___ns1__Confirmacion_(SRIntegracionLGMSoapService*);
static int serve___ns1__Anulacion_(SRIntegracionLGMSoapService*);
static int serve___ns1__Conciliacion_(SRIntegracionLGMSoapService*);

int SRIntegracionLGMSoapService::dispatch()
{	SRIntegracionLGMSoapService_init(this->soap->imode, this->soap->omode);
	soap_peek_element(this->soap);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns1:Certificacion"))
		return serve___ns1__Certificacion(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns1:Confirmacion"))
		return serve___ns1__Confirmacion(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns1:Anulacion"))
		return serve___ns1__Anulacion(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns1:Conciliacion"))
		return serve___ns1__Conciliacion(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns1:Certificacion"))
		return serve___ns1__Certificacion_(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns1:Confirmacion"))
		return serve___ns1__Confirmacion_(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns1:Anulacion"))
		return serve___ns1__Anulacion_(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns1:Conciliacion"))
		return serve___ns1__Conciliacion_(this);
	return this->soap->error = SOAP_NO_METHOD;
}

static int serve___ns1__Certificacion(SRIntegracionLGMSoapService *service)
{	struct soap *soap = service->soap;
	struct __ns1__Certificacion soap_tmp___ns1__Certificacion;
	_ns1__CertificacionResponse ns1__CertificacionResponse;
	ns1__CertificacionResponse.soap_default(soap);
	soap_default___ns1__Certificacion(soap, &soap_tmp___ns1__Certificacion);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__Certificacion(soap, &soap_tmp___ns1__Certificacion, "-ns1:Certificacion", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->Certificacion(soap_tmp___ns1__Certificacion.ns1__Certificacion, &ns1__CertificacionResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__CertificacionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__CertificacionResponse.soap_put(soap, "ns1:CertificacionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__CertificacionResponse.soap_put(soap, "ns1:CertificacionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__Confirmacion(SRIntegracionLGMSoapService *service)
{	struct soap *soap = service->soap;
	struct __ns1__Confirmacion soap_tmp___ns1__Confirmacion;
	_ns1__ConfirmacionResponse ns1__ConfirmacionResponse;
	ns1__ConfirmacionResponse.soap_default(soap);
	soap_default___ns1__Confirmacion(soap, &soap_tmp___ns1__Confirmacion);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__Confirmacion(soap, &soap_tmp___ns1__Confirmacion, "-ns1:Confirmacion", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->Confirmacion(soap_tmp___ns1__Confirmacion.ns1__Confirmacion, &ns1__ConfirmacionResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__ConfirmacionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ConfirmacionResponse.soap_put(soap, "ns1:ConfirmacionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ConfirmacionResponse.soap_put(soap, "ns1:ConfirmacionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__Anulacion(SRIntegracionLGMSoapService *service)
{	struct soap *soap = service->soap;
	struct __ns1__Anulacion soap_tmp___ns1__Anulacion;
	_ns1__AnulacionResponse ns1__AnulacionResponse;
	ns1__AnulacionResponse.soap_default(soap);
	soap_default___ns1__Anulacion(soap, &soap_tmp___ns1__Anulacion);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__Anulacion(soap, &soap_tmp___ns1__Anulacion, "-ns1:Anulacion", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->Anulacion(soap_tmp___ns1__Anulacion.ns1__Anulacion, &ns1__AnulacionResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__AnulacionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__AnulacionResponse.soap_put(soap, "ns1:AnulacionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__AnulacionResponse.soap_put(soap, "ns1:AnulacionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__Conciliacion(SRIntegracionLGMSoapService *service)
{	struct soap *soap = service->soap;
	struct __ns1__Conciliacion soap_tmp___ns1__Conciliacion;
	_ns1__ConciliacionResponse ns1__ConciliacionResponse;
	ns1__ConciliacionResponse.soap_default(soap);
	soap_default___ns1__Conciliacion(soap, &soap_tmp___ns1__Conciliacion);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__Conciliacion(soap, &soap_tmp___ns1__Conciliacion, "-ns1:Conciliacion", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->Conciliacion(soap_tmp___ns1__Conciliacion.ns1__Conciliacion, &ns1__ConciliacionResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__ConciliacionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ConciliacionResponse.soap_put(soap, "ns1:ConciliacionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ConciliacionResponse.soap_put(soap, "ns1:ConciliacionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__Certificacion_(SRIntegracionLGMSoapService *service)
{	struct soap *soap = service->soap;
	struct __ns1__Certificacion_ soap_tmp___ns1__Certificacion_;
	_ns1__CertificacionResponse ns1__CertificacionResponse;
	ns1__CertificacionResponse.soap_default(soap);
	soap_default___ns1__Certificacion_(soap, &soap_tmp___ns1__Certificacion_);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__Certificacion_(soap, &soap_tmp___ns1__Certificacion_, "-ns1:Certificacion", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->Certificacion_(soap_tmp___ns1__Certificacion_.ns1__Certificacion, &ns1__CertificacionResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__CertificacionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__CertificacionResponse.soap_put(soap, "ns1:CertificacionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__CertificacionResponse.soap_put(soap, "ns1:CertificacionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__Confirmacion_(SRIntegracionLGMSoapService *service)
{	struct soap *soap = service->soap;
	struct __ns1__Confirmacion_ soap_tmp___ns1__Confirmacion_;
	_ns1__ConfirmacionResponse ns1__ConfirmacionResponse;
	ns1__ConfirmacionResponse.soap_default(soap);
	soap_default___ns1__Confirmacion_(soap, &soap_tmp___ns1__Confirmacion_);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__Confirmacion_(soap, &soap_tmp___ns1__Confirmacion_, "-ns1:Confirmacion", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->Confirmacion_(soap_tmp___ns1__Confirmacion_.ns1__Confirmacion, &ns1__ConfirmacionResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__ConfirmacionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ConfirmacionResponse.soap_put(soap, "ns1:ConfirmacionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ConfirmacionResponse.soap_put(soap, "ns1:ConfirmacionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__Anulacion_(SRIntegracionLGMSoapService *service)
{	struct soap *soap = service->soap;
	struct __ns1__Anulacion_ soap_tmp___ns1__Anulacion_;
	_ns1__AnulacionResponse ns1__AnulacionResponse;
	ns1__AnulacionResponse.soap_default(soap);
	soap_default___ns1__Anulacion_(soap, &soap_tmp___ns1__Anulacion_);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__Anulacion_(soap, &soap_tmp___ns1__Anulacion_, "-ns1:Anulacion", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->Anulacion_(soap_tmp___ns1__Anulacion_.ns1__Anulacion, &ns1__AnulacionResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__AnulacionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__AnulacionResponse.soap_put(soap, "ns1:AnulacionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__AnulacionResponse.soap_put(soap, "ns1:AnulacionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__Conciliacion_(SRIntegracionLGMSoapService *service)
{	struct soap *soap = service->soap;
	struct __ns1__Conciliacion_ soap_tmp___ns1__Conciliacion_;
	_ns1__ConciliacionResponse ns1__ConciliacionResponse;
	ns1__ConciliacionResponse.soap_default(soap);
	soap_default___ns1__Conciliacion_(soap, &soap_tmp___ns1__Conciliacion_);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__Conciliacion_(soap, &soap_tmp___ns1__Conciliacion_, "-ns1:Conciliacion", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->Conciliacion_(soap_tmp___ns1__Conciliacion_.ns1__Conciliacion, &ns1__ConciliacionResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__ConciliacionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ConciliacionResponse.soap_put(soap, "ns1:ConciliacionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ConciliacionResponse.soap_put(soap, "ns1:ConciliacionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
