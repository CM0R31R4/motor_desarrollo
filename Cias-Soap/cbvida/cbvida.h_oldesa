/* cbvida.h
   Generated by wsdl2h 2.8.14 from http://seguros.cruzblanca.qa/wsIntegracionLGM/IntegracionLGM.asmx?WSDL and typemap.dat
   2014-12-10 21:40:19 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2013 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on cbvida.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://Seguros.CruzBlanca.cl/WsIntegracionLGM/                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://Seguros.CruzBlanca.cl/WsIntegracionLGM/"
//gsoap ns1   schema namespace:	http://Seguros.CruzBlanca.cl/WsIntegracionLGM/
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class _ns1__Certificacion.
class _ns1__Certificacion;

//  Forward declaration of class _ns1__CertificacionResponse.
class _ns1__CertificacionResponse;

//  Forward declaration of class _ns1__Confirmacion.
class _ns1__Confirmacion;

//  Forward declaration of class _ns1__ConfirmacionResponse.
class _ns1__ConfirmacionResponse;

//  Forward declaration of class _ns1__Anulacion.
class _ns1__Anulacion;

//  Forward declaration of class _ns1__AnulacionResponse.
class _ns1__AnulacionResponse;

//  Forward declaration of class _ns1__Conciliacion.
class _ns1__Conciliacion;

//  Forward declaration of class _ns1__ConciliacionResponse.
class _ns1__ConciliacionResponse;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://Seguros.CruzBlanca.cl/WsIntegracionLGM/                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://Seguros.CruzBlanca.cl/WsIntegracionLGM/                           *
 *                                                                            *
\******************************************************************************/



/// Top-level root element "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/":Certificacion

/// "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/":Certificacion is a complexType.
/// class _ns1__Certificacion operations:
/// - soap_new__ns1__Certificacion(soap*) allocate
/// - soap_new__ns1__Certificacion(soap*, int num) allocate array
/// - soap_new_req__ns1__Certificacion(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__Certificacion(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__Certificacion(soap*, _ns1__Certificacion*) deserialize from a stream
/// - int soap_write__ns1__Certificacion(soap, _ns1__Certificacion*) serialize to a stream
class _ns1__Certificacion
{ public:
/// Element extCodSeguro of type xs:int.
    int                                  extCodSeguro                   1;	///< Required element.
/// Element extRutBeneficiario of type xs:string.
    std::string*                         extRutBeneficiario             0;	///< Optional element.
/// Element extRutPrestador of type xs:string.
    std::string*                         extRutPrestador                0;	///< Optional element.
/// Element extCodFinanciador of type xs:int.
    int                                  extCodFinanciador              1;	///< Required element.
/// Element extCodLugar of type xs:int.
    int                                  extCodLugar                    1;	///< Required element.
/// Element extNumOperacion of type xs:int.
    int                                  extNumOperacion                1;	///< Required element.
/// Element ExtLisPrest1 of type xs:string.
    std::string*                         ExtLisPrest1                   0;	///< Optional element.
/// Element ExtLisPrest2 of type xs:string.
    std::string*                         ExtLisPrest2                   0;	///< Optional element.
/// Element ExtLisPrest3 of type xs:string.
    std::string*                         ExtLisPrest3                   0;	///< Optional element.
/// Element ExtLisPrest4 of type xs:string.
    std::string*                         ExtLisPrest4                   0;	///< Optional element.
/// Element ExtLisPrest5 of type xs:string.
    std::string*                         ExtLisPrest5                   0;	///< Optional element.
/// Element ExtLisPrest6 of type xs:string.
    std::string*                         ExtLisPrest6                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/":CertificacionResponse

/// "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/":CertificacionResponse is a complexType.
/// class _ns1__CertificacionResponse operations:
/// - soap_new__ns1__CertificacionResponse(soap*) allocate
/// - soap_new__ns1__CertificacionResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__CertificacionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__CertificacionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__CertificacionResponse(soap*, _ns1__CertificacionResponse*) deserialize from a stream
/// - int soap_write__ns1__CertificacionResponse(soap, _ns1__CertificacionResponse*) serialize to a stream
class _ns1__CertificacionResponse
{ public:
/// class _ns1__CertificacionResponse_CertificacionResult operations:
/// - soap_new__ns1__CertificacionResponse_CertificacionResult(soap*) allocate
/// - soap_new__ns1__CertificacionResponse_CertificacionResult(soap*, int num) allocate array
/// - soap_new_req__ns1__CertificacionResponse_CertificacionResult(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__CertificacionResponse_CertificacionResult(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__CertificacionResponse_CertificacionResult(soap*, _ns1__CertificacionResponse_CertificacionResult*) deserialize from a stream
/// - int soap_write__ns1__CertificacionResponse_CertificacionResult(soap, _ns1__CertificacionResponse_CertificacionResult*) serialize to a stream
    class _ns1__CertificacionResponse_CertificacionResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
    }                                   *CertificacionResult            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/":Confirmacion

/// "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/":Confirmacion is a complexType.
/// class _ns1__Confirmacion operations:
/// - soap_new__ns1__Confirmacion(soap*) allocate
/// - soap_new__ns1__Confirmacion(soap*, int num) allocate array
/// - soap_new_req__ns1__Confirmacion(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__Confirmacion(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__Confirmacion(soap*, _ns1__Confirmacion*) deserialize from a stream
/// - int soap_write__ns1__Confirmacion(soap, _ns1__Confirmacion*) serialize to a stream
class _ns1__Confirmacion
{ public:
/// Element extCodSeguro of type xs:int.
    int                                  extCodSeguro                   1;	///< Required element.
/// Element extNumOperacion of type xs:int.
    int                                  extNumOperacion                1;	///< Required element.
/// Element extRutBeneficiario of type xs:string.
    std::string*                         extRutBeneficiario             0;	///< Optional element.
/// Element extRutPrestador of type xs:string.
    std::string*                         extRutPrestador                0;	///< Optional element.
/// Element extFechaEmision of type xs:string.
    std::string*                         extFechaEmision                0;	///< Optional element.
/// Element extRutEmisor of type xs:string.
    std::string*                         extRutEmisor                   0;	///< Optional element.
/// Element extRutCajero of type xs:string.
    std::string*                         extRutCajero                   0;	///< Optional element.
/// Element extFolioBono of type xs:int.
    int                                  extFolioBono                   1;	///< Required element.
/// Element extCodFinanciador of type xs:int.
    int                                  extCodFinanciador              1;	///< Required element.
/// Element extCodLugar of type xs:int.
    int                                  extCodLugar                    1;	///< Required element.
/// Element extMtoTot of type xs:int.
    int                                  extMtoTot                      1;	///< Required element.
/// Element extMtoCopago of type xs:int.
    int                                  extMtoCopago                   1;	///< Required element.
/// Element extMtoBonif of type xs:int.
    int                                  extMtoBonif                    1;	///< Required element.
/// Element ExtLisPrest of type xs:string.
    std::string*                         ExtLisPrest                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/":ConfirmacionResponse

/// "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/":ConfirmacionResponse is a complexType.
/// class _ns1__ConfirmacionResponse operations:
/// - soap_new__ns1__ConfirmacionResponse(soap*) allocate
/// - soap_new__ns1__ConfirmacionResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__ConfirmacionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__ConfirmacionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__ConfirmacionResponse(soap*, _ns1__ConfirmacionResponse*) deserialize from a stream
/// - int soap_write__ns1__ConfirmacionResponse(soap, _ns1__ConfirmacionResponse*) serialize to a stream
class _ns1__ConfirmacionResponse
{ public:
/// class _ns1__ConfirmacionResponse_ConfirmacionResult operations:
/// - soap_new__ns1__ConfirmacionResponse_ConfirmacionResult(soap*) allocate
/// - soap_new__ns1__ConfirmacionResponse_ConfirmacionResult(soap*, int num) allocate array
/// - soap_new_req__ns1__ConfirmacionResponse_ConfirmacionResult(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__ConfirmacionResponse_ConfirmacionResult(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__ConfirmacionResponse_ConfirmacionResult(soap*, _ns1__ConfirmacionResponse_ConfirmacionResult*) deserialize from a stream
/// - int soap_write__ns1__ConfirmacionResponse_ConfirmacionResult(soap, _ns1__ConfirmacionResponse_ConfirmacionResult*) serialize to a stream
    class _ns1__ConfirmacionResponse_ConfirmacionResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
    }                                   *ConfirmacionResult             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/":Anulacion

/// "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/":Anulacion is a complexType.
/// class _ns1__Anulacion operations:
/// - soap_new__ns1__Anulacion(soap*) allocate
/// - soap_new__ns1__Anulacion(soap*, int num) allocate array
/// - soap_new_req__ns1__Anulacion(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__Anulacion(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__Anulacion(soap*, _ns1__Anulacion*) deserialize from a stream
/// - int soap_write__ns1__Anulacion(soap, _ns1__Anulacion*) serialize to a stream
class _ns1__Anulacion
{ public:
/// Element extCodSeguro of type xs:int.
    int                                  extCodSeguro                   1;	///< Required element.
/// Element extRutBeneficiario of type xs:string.
    std::string*                         extRutBeneficiario             0;	///< Optional element.
/// Element extFolioAuto of type xs:int.
    int                                  extFolioAuto                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/":AnulacionResponse

/// "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/":AnulacionResponse is a complexType.
/// class _ns1__AnulacionResponse operations:
/// - soap_new__ns1__AnulacionResponse(soap*) allocate
/// - soap_new__ns1__AnulacionResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__AnulacionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__AnulacionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__AnulacionResponse(soap*, _ns1__AnulacionResponse*) deserialize from a stream
/// - int soap_write__ns1__AnulacionResponse(soap, _ns1__AnulacionResponse*) serialize to a stream
class _ns1__AnulacionResponse
{ public:
/// class _ns1__AnulacionResponse_AnulacionResult operations:
/// - soap_new__ns1__AnulacionResponse_AnulacionResult(soap*) allocate
/// - soap_new__ns1__AnulacionResponse_AnulacionResult(soap*, int num) allocate array
/// - soap_new_req__ns1__AnulacionResponse_AnulacionResult(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__AnulacionResponse_AnulacionResult(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__AnulacionResponse_AnulacionResult(soap*, _ns1__AnulacionResponse_AnulacionResult*) deserialize from a stream
/// - int soap_write__ns1__AnulacionResponse_AnulacionResult(soap, _ns1__AnulacionResponse_AnulacionResult*) serialize to a stream
    class _ns1__AnulacionResponse_AnulacionResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
    }                                   *AnulacionResult                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/":Conciliacion

/// "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/":Conciliacion is a complexType.
/// class _ns1__Conciliacion operations:
/// - soap_new__ns1__Conciliacion(soap*) allocate
/// - soap_new__ns1__Conciliacion(soap*, int num) allocate array
/// - soap_new_req__ns1__Conciliacion(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__Conciliacion(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__Conciliacion(soap*, _ns1__Conciliacion*) deserialize from a stream
/// - int soap_write__ns1__Conciliacion(soap, _ns1__Conciliacion*) serialize to a stream
class _ns1__Conciliacion
{ public:
/// Element extCodSeguro of type xs:int.
    int                                  extCodSeguro                   1;	///< Required element.
/// Element extFolioAuto of type xs:int.
    int                                  extFolioAuto                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/":ConciliacionResponse

/// "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/":ConciliacionResponse is a complexType.
/// class _ns1__ConciliacionResponse operations:
/// - soap_new__ns1__ConciliacionResponse(soap*) allocate
/// - soap_new__ns1__ConciliacionResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__ConciliacionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__ConciliacionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__ConciliacionResponse(soap*, _ns1__ConciliacionResponse*) deserialize from a stream
/// - int soap_write__ns1__ConciliacionResponse(soap, _ns1__ConciliacionResponse*) serialize to a stream
class _ns1__ConciliacionResponse
{ public:
/// class _ns1__ConciliacionResponse_ConciliacionResult operations:
/// - soap_new__ns1__ConciliacionResponse_ConciliacionResult(soap*) allocate
/// - soap_new__ns1__ConciliacionResponse_ConciliacionResult(soap*, int num) allocate array
/// - soap_new_req__ns1__ConciliacionResponse_ConciliacionResult(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__ConciliacionResponse_ConciliacionResult(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__ConciliacionResponse_ConciliacionResult(soap*, _ns1__ConciliacionResponse_ConciliacionResult*) deserialize from a stream
/// - int soap_write__ns1__ConciliacionResponse_ConciliacionResult(soap, _ns1__ConciliacionResponse_ConciliacionResult*) serialize to a stream
    class _ns1__ConciliacionResponse_ConciliacionResult
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
    }                                   *ConciliacionResult             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://Seguros.CruzBlanca.cl/WsIntegracionLGM/                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://Seguros.CruzBlanca.cl/WsIntegracionLGM/                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap ns1  service name:	SRIntegracionLGMSoap 
//gsoap ns1  service type:	SRIntegracionLGMSoap 
//gsoap ns1  service port:	http://seguros.cruzblanca.qa/wsIntegracionLGM/IntegracionLGM.asmx 
//gsoap ns1  service namespace:	http://Seguros.CruzBlanca.cl/WsIntegracionLGM/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref SRIntegracionLGMSoap

@section Service_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page SRIntegracionLGMSoap Binding "SRIntegracionLGMSoap"

@section SRIntegracionLGMSoap_operations Operations of Binding  "SRIntegracionLGMSoap"

  - @ref __ns1__Certificacion

  - @ref __ns1__Confirmacion

  - @ref __ns1__Anulacion

  - @ref __ns1__Conciliacion

  - @ref __ns1__Certificacion_

  - @ref __ns1__Confirmacion_

  - @ref __ns1__Anulacion_

  - @ref __ns1__Conciliacion_

@section SRIntegracionLGMSoap_ports Endpoints of Binding  "SRIntegracionLGMSoap"

  - http://seguros.cruzblanca.qa/wsIntegracionLGM/IntegracionLGM.asmx

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   SRIntegracionLGMSoap                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Certificacion                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Certificacion" of service binding "SRIntegracionLGMSoap"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Certificacion"

  - Addressing input action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Certificacion"

  - Addressing output action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/CertificacionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Certificacion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__Certificacion*                ns1__Certificacion,
    // output parameters:
    _ns1__CertificacionResponse*        ns1__CertificacionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Certificacion(
    struct soap *soap,
    // input parameters:
    _ns1__Certificacion*                ns1__Certificacion,
    // output parameters:
    _ns1__CertificacionResponse*        ns1__CertificacionResponse
  );
@endcode

C++ proxy class (defined in soapSRIntegracionLGMSoapProxy.h):
@code
  class SRIntegracionLGMSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSRIntegracionLGMSoapService.h):
@code
  class SRIntegracionLGMSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Certificacion SOAP
//gsoap ns1  service method-style:	Certificacion document
//gsoap ns1  service method-encoding:	Certificacion literal
//gsoap ns1  service method-input-action:	Certificacion http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Certificacion
//gsoap ns1  service method-output-action:	Certificacion http://Seguros.CruzBlanca.cl/WsIntegracionLGM/CertificacionResponse
int __ns1__Certificacion(
    _ns1__Certificacion*                ns1__Certificacion,	///< Input parameter
    _ns1__CertificacionResponse*        ns1__CertificacionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Confirmacion                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Confirmacion" of service binding "SRIntegracionLGMSoap"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Confirmacion"

  - Addressing input action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Confirmacion"

  - Addressing output action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/ConfirmacionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Confirmacion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__Confirmacion*                 ns1__Confirmacion,
    // output parameters:
    _ns1__ConfirmacionResponse*         ns1__ConfirmacionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Confirmacion(
    struct soap *soap,
    // input parameters:
    _ns1__Confirmacion*                 ns1__Confirmacion,
    // output parameters:
    _ns1__ConfirmacionResponse*         ns1__ConfirmacionResponse
  );
@endcode

C++ proxy class (defined in soapSRIntegracionLGMSoapProxy.h):
@code
  class SRIntegracionLGMSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSRIntegracionLGMSoapService.h):
@code
  class SRIntegracionLGMSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Confirmacion SOAP
//gsoap ns1  service method-style:	Confirmacion document
//gsoap ns1  service method-encoding:	Confirmacion literal
//gsoap ns1  service method-input-action:	Confirmacion http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Confirmacion
//gsoap ns1  service method-output-action:	Confirmacion http://Seguros.CruzBlanca.cl/WsIntegracionLGM/ConfirmacionResponse
int __ns1__Confirmacion(
    _ns1__Confirmacion*                 ns1__Confirmacion,	///< Input parameter
    _ns1__ConfirmacionResponse*         ns1__ConfirmacionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Anulacion                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Anulacion" of service binding "SRIntegracionLGMSoap"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Anulacion"

  - Addressing input action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Anulacion"

  - Addressing output action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/AnulacionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Anulacion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__Anulacion*                    ns1__Anulacion,
    // output parameters:
    _ns1__AnulacionResponse*            ns1__AnulacionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Anulacion(
    struct soap *soap,
    // input parameters:
    _ns1__Anulacion*                    ns1__Anulacion,
    // output parameters:
    _ns1__AnulacionResponse*            ns1__AnulacionResponse
  );
@endcode

C++ proxy class (defined in soapSRIntegracionLGMSoapProxy.h):
@code
  class SRIntegracionLGMSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSRIntegracionLGMSoapService.h):
@code
  class SRIntegracionLGMSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Anulacion SOAP
//gsoap ns1  service method-style:	Anulacion document
//gsoap ns1  service method-encoding:	Anulacion literal
//gsoap ns1  service method-input-action:	Anulacion http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Anulacion
//gsoap ns1  service method-output-action:	Anulacion http://Seguros.CruzBlanca.cl/WsIntegracionLGM/AnulacionResponse
int __ns1__Anulacion(
    _ns1__Anulacion*                    ns1__Anulacion,	///< Input parameter
    _ns1__AnulacionResponse*            ns1__AnulacionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Conciliacion                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Conciliacion" of service binding "SRIntegracionLGMSoap"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Conciliacion"

  - Addressing input action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Conciliacion"

  - Addressing output action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/ConciliacionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Conciliacion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__Conciliacion*                 ns1__Conciliacion,
    // output parameters:
    _ns1__ConciliacionResponse*         ns1__ConciliacionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Conciliacion(
    struct soap *soap,
    // input parameters:
    _ns1__Conciliacion*                 ns1__Conciliacion,
    // output parameters:
    _ns1__ConciliacionResponse*         ns1__ConciliacionResponse
  );
@endcode

C++ proxy class (defined in soapSRIntegracionLGMSoapProxy.h):
@code
  class SRIntegracionLGMSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSRIntegracionLGMSoapService.h):
@code
  class SRIntegracionLGMSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Conciliacion SOAP
//gsoap ns1  service method-style:	Conciliacion document
//gsoap ns1  service method-encoding:	Conciliacion literal
//gsoap ns1  service method-input-action:	Conciliacion http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Conciliacion
//gsoap ns1  service method-output-action:	Conciliacion http://Seguros.CruzBlanca.cl/WsIntegracionLGM/ConciliacionResponse
int __ns1__Conciliacion(
    _ns1__Conciliacion*                 ns1__Conciliacion,	///< Input parameter
    _ns1__ConciliacionResponse*         ns1__ConciliacionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Certificacion_                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Certificacion_" of service binding "SRIntegracionLGMSoap"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Certificacion"

  - Addressing input action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Certificacion"

  - Addressing output action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/CertificacionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Certificacion_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__Certificacion*                ns1__Certificacion,
    // output parameters:
    _ns1__CertificacionResponse*        ns1__CertificacionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Certificacion_(
    struct soap *soap,
    // input parameters:
    _ns1__Certificacion*                ns1__Certificacion,
    // output parameters:
    _ns1__CertificacionResponse*        ns1__CertificacionResponse
  );
@endcode

C++ proxy class (defined in soapSRIntegracionLGMSoapProxy.h):
@code
  class SRIntegracionLGMSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSRIntegracionLGMSoapService.h):
@code
  class SRIntegracionLGMSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Certificacion_ SOAP
//gsoap ns1  service method-style:	Certificacion_ document
//gsoap ns1  service method-encoding:	Certificacion_ literal
//gsoap ns1  service method-input-action:	Certificacion_ http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Certificacion
//gsoap ns1  service method-output-action:	Certificacion_ http://Seguros.CruzBlanca.cl/WsIntegracionLGM/CertificacionResponse
int __ns1__Certificacion_(
    _ns1__Certificacion*                ns1__Certificacion,	///< Input parameter
    _ns1__CertificacionResponse*        ns1__CertificacionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Confirmacion_                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Confirmacion_" of service binding "SRIntegracionLGMSoap"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Confirmacion"

  - Addressing input action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Confirmacion"

  - Addressing output action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/ConfirmacionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Confirmacion_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__Confirmacion*                 ns1__Confirmacion,
    // output parameters:
    _ns1__ConfirmacionResponse*         ns1__ConfirmacionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Confirmacion_(
    struct soap *soap,
    // input parameters:
    _ns1__Confirmacion*                 ns1__Confirmacion,
    // output parameters:
    _ns1__ConfirmacionResponse*         ns1__ConfirmacionResponse
  );
@endcode

C++ proxy class (defined in soapSRIntegracionLGMSoapProxy.h):
@code
  class SRIntegracionLGMSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSRIntegracionLGMSoapService.h):
@code
  class SRIntegracionLGMSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Confirmacion_ SOAP
//gsoap ns1  service method-style:	Confirmacion_ document
//gsoap ns1  service method-encoding:	Confirmacion_ literal
//gsoap ns1  service method-input-action:	Confirmacion_ http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Confirmacion
//gsoap ns1  service method-output-action:	Confirmacion_ http://Seguros.CruzBlanca.cl/WsIntegracionLGM/ConfirmacionResponse
int __ns1__Confirmacion_(
    _ns1__Confirmacion*                 ns1__Confirmacion,	///< Input parameter
    _ns1__ConfirmacionResponse*         ns1__ConfirmacionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Anulacion_                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Anulacion_" of service binding "SRIntegracionLGMSoap"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Anulacion"

  - Addressing input action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Anulacion"

  - Addressing output action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/AnulacionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Anulacion_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__Anulacion*                    ns1__Anulacion,
    // output parameters:
    _ns1__AnulacionResponse*            ns1__AnulacionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Anulacion_(
    struct soap *soap,
    // input parameters:
    _ns1__Anulacion*                    ns1__Anulacion,
    // output parameters:
    _ns1__AnulacionResponse*            ns1__AnulacionResponse
  );
@endcode

C++ proxy class (defined in soapSRIntegracionLGMSoapProxy.h):
@code
  class SRIntegracionLGMSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSRIntegracionLGMSoapService.h):
@code
  class SRIntegracionLGMSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Anulacion_ SOAP
//gsoap ns1  service method-style:	Anulacion_ document
//gsoap ns1  service method-encoding:	Anulacion_ literal
//gsoap ns1  service method-input-action:	Anulacion_ http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Anulacion
//gsoap ns1  service method-output-action:	Anulacion_ http://Seguros.CruzBlanca.cl/WsIntegracionLGM/AnulacionResponse
int __ns1__Anulacion_(
    _ns1__Anulacion*                    ns1__Anulacion,	///< Input parameter
    _ns1__AnulacionResponse*            ns1__AnulacionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Conciliacion_                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Conciliacion_" of service binding "SRIntegracionLGMSoap"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Conciliacion"

  - Addressing input action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Conciliacion"

  - Addressing output action: "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/ConciliacionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Conciliacion_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__Conciliacion*                 ns1__Conciliacion,
    // output parameters:
    _ns1__ConciliacionResponse*         ns1__ConciliacionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Conciliacion_(
    struct soap *soap,
    // input parameters:
    _ns1__Conciliacion*                 ns1__Conciliacion,
    // output parameters:
    _ns1__ConciliacionResponse*         ns1__ConciliacionResponse
  );
@endcode

C++ proxy class (defined in soapSRIntegracionLGMSoapProxy.h):
@code
  class SRIntegracionLGMSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSRIntegracionLGMSoapService.h):
@code
  class SRIntegracionLGMSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	Conciliacion_ SOAP
//gsoap ns1  service method-style:	Conciliacion_ document
//gsoap ns1  service method-encoding:	Conciliacion_ literal
//gsoap ns1  service method-input-action:	Conciliacion_ http://Seguros.CruzBlanca.cl/WsIntegracionLGM/Conciliacion
//gsoap ns1  service method-output-action:	Conciliacion_ http://Seguros.CruzBlanca.cl/WsIntegracionLGM/ConciliacionResponse
int __ns1__Conciliacion_(
    _ns1__Conciliacion*                 ns1__Conciliacion,	///< Input parameter
    _ns1__ConciliacionResponse*         ns1__ConciliacionResponse	///< Output parameter
);

/**

@page SRIntegracionLGMSoap Binding "SRIntegracionLGMSoap"

@section SRIntegracionLGMSoap_policy_enablers Policy Enablers of Binding  "SRIntegracionLGMSoap"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section ns1 Top-level root elements of schema "http://Seguros.CruzBlanca.cl/WsIntegracionLGM/"

  - <ns1:Certificacion> @ref _ns1__Certificacion
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__Certificacion(struct soap*, _ns1__Certificacion*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__Certificacion(struct soap*, _ns1__Certificacion*);
    @endcode

  - <ns1:CertificacionResponse> @ref _ns1__CertificacionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CertificacionResponse(struct soap*, _ns1__CertificacionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CertificacionResponse(struct soap*, _ns1__CertificacionResponse*);
    @endcode

  - <ns1:Confirmacion> @ref _ns1__Confirmacion
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__Confirmacion(struct soap*, _ns1__Confirmacion*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__Confirmacion(struct soap*, _ns1__Confirmacion*);
    @endcode

  - <ns1:ConfirmacionResponse> @ref _ns1__ConfirmacionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ConfirmacionResponse(struct soap*, _ns1__ConfirmacionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ConfirmacionResponse(struct soap*, _ns1__ConfirmacionResponse*);
    @endcode

  - <ns1:Anulacion> @ref _ns1__Anulacion
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__Anulacion(struct soap*, _ns1__Anulacion*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__Anulacion(struct soap*, _ns1__Anulacion*);
    @endcode

  - <ns1:AnulacionResponse> @ref _ns1__AnulacionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AnulacionResponse(struct soap*, _ns1__AnulacionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AnulacionResponse(struct soap*, _ns1__AnulacionResponse*);
    @endcode

  - <ns1:Conciliacion> @ref _ns1__Conciliacion
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__Conciliacion(struct soap*, _ns1__Conciliacion*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__Conciliacion(struct soap*, _ns1__Conciliacion*);
    @endcode

  - <ns1:ConciliacionResponse> @ref _ns1__ConciliacionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__ConciliacionResponse(struct soap*, _ns1__ConciliacionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__ConciliacionResponse(struct soap*, _ns1__ConciliacionResponse*);
    @endcode

*/

/* End of cbvida.h */
